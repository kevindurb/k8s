---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deployment
  annotations:
    reloader.stakater.com/auto: 'true'
  labels: &labels
    app.kubernetes.io/component: web
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels: *labels
  template:
    metadata:
      labels: *labels
    spec:
      securityContext:
        fsGroup: 1000
      volumes:
        - name: volume
          persistentVolumeClaim:
            claimName: volume
      containers:
        - name: webtop
          image: lscr.io/linuxserver/webtop:latest
          # resources:
          #   requests:
          #     memory: 100M
          #   limits:
          #     memory: 1G
          # securityContext:
          #   privileged: false
          #   allowPrivilegeEscalation: false
          #   runAsNonRoot: true
          #   runAsUser: 1000
          #   runAsGroup: 1000
          #   readOnlyRootFilesystem: true
          #   capabilities:
          #     drop: [ALL]
          volumeMounts:
            - name: volume
              mountPath: /config
          env:
            - name: TZ
              value: America/Denver
            - name: PUID
              value: 1000
            - name: PGID
              value: 1000
          ports:
            - name: http
              containerPort: 3000

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: volume
spec:
  accessModes: [ReadWriteOnce]
  storageClassName: longhorn
  resources:
    requests:
      storage: 1G

---
apiVersion: v1
kind: Service
metadata:
  name: web-service
spec:
  selector:
    app.kubernetes.io/component: web
  ports:
    - name: http
      port: 80
      targetPort: http

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  annotations:
    cert-manager.io/cluster-issuer: cloudflare-issuer
spec:
  ingressClassName: internal
  tls:
    - hosts: [&host webtop.beaver-cloud.xyz]
      secretName: beaver-cloud-wildcard-cert
  rules:
    - host: *host
      http:
        paths:
          - pathType: Prefix
            path: '/'
            backend:
              service:
                name: web-service
                port:
                  name: http

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gatus-config
  labels:
    gatus.io/enabled: 'true'
data:
  webtop.yml: |
    endpoints:
      - name: webtop
        url: http://webtop-web-service.apps
        conditions:
          - '[STATUS] == 200'
