---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deployment
  annotations:
    reloader.stakater.com/auto: 'true'
  labels: &labels
    app.kubernetes.io/component: web
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels: *labels
  template:
    metadata:
      labels: *labels
    spec:
      hostNetwork: true
      securityContext:
        fsGroup: 1000
      volumes:
        - name: volume
          persistentVolumeClaim:
            claimName: volume
        - name: config
          configMap:
            name: config
        - name: tmp
          emptyDir: {}
      initContainers:
        - name: init-config
          image: busybox:1.37@sha256:2f590fc602ce325cbff2ccfc39499014d039546dc400ef8bbf5c6ffb860632e7
          command:
            - sh
            - -c
            - |
              if [ ! -f /config/automations.yaml ]; then
                echo "# Empty automations file" > /config/automations.yaml
              fi
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          volumeMounts:
            - name: volume
              mountPath: /config
      containers:
        - name: home-assistant
          image: ghcr.io/home-assistant/home-assistant:2025.10.4@sha256:449140e073d8d7814098cd62dfdbb326ad043f51a3c4d4721889369f46751d52
          command: [python, -m, homeassistant, --config, /config]
          resources:
            requests:
              memory: 100M
            limits:
              memory: 4G
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: false
            capabilities:
              drop: [ALL]
          volumeMounts:
            - name: volume
              mountPath: /config
            - name: config
              mountPath: /config/configuration.yaml
              subPath: configuration.yaml
              readOnly: true
            - name: tmp
              mountPath: /tmp
          env:
            - name: TZ
              value: America/Denver
          ports:
            - name: http
              containerPort: 8123

---
apiVersion: v1
kind: Service
metadata:
  name: web-service
spec:
  selector:
    app.kubernetes.io/component: web
  ports:
    - name: http
      port: 80
      targetPort: http

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  annotations:
    cert-manager.io/cluster-issuer: cloudflare-issuer
    nginx.ingress.kubernetes.io/proxy-body-size: '0'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '600'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '600'
spec:
  ingressClassName: internal
  tls:
    - hosts: [&host home-assistant.beaver-cloud.xyz]
      secretName: *host
  rules:
    - host: *host
      http:
        paths:
          - pathType: Prefix
            path: '/'
            backend:
              service:
                name: web-service
                port:
                  name: http

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config
data:
  configuration.yaml: |
    ---
    default_config:
    assist_pipeline:
    http:
      use_x_forwarded_for: true
      trusted_proxies:
        - 0.0.0.0/0

    automation: !include automations.yaml

    frontend:
      themes: !include_dir_merge_named themes
