---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgvector-deployment
  annotations:
    reloader.stakater.com/auto: "true"
  labels: &labels
    app.kubernetes.io/component: pgvector
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels: *labels
  template:
    metadata:
      labels: *labels
    spec:
      securityContext:
        fsGroup: 1000
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: pgvector-volume
        - name: run
          emptyDir: {}
        - name: tmp
          emptyDir: {}
      containers:
        - name: postgres
          image: docker.io/pgvector/pgvector:pg17
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: data
            - mountPath: /run
              name: run
            - mountPath: /tmp
              name: tmp
          resources:
            requests:
              memory: 100M
            limits:
              memory: 1G
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
            capabilities:
              drop: [ALL]
          envFrom:
            - secretRef:
                name: n8n-pgvector-secret
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          ports:
            - name: postgres
              containerPort: 5432

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgvector-volume
spec:
  accessModes: [ReadWriteOnce]
  storageClassName: longhorn-replicated
  resources:
    requests:
      storage: 5Gi

---
apiVersion: v1
kind: Service
metadata:
  name: pgvector-service
spec:
  selector:
    app.kubernetes.io/component: pgvector
  ports:
    - name: postgres
      port: 5432
      targetPort: postgres
