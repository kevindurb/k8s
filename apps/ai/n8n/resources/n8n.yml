---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deployment
  annotations:
    reloader.stakater.com/auto: 'true'
  labels: &labels
    app.kubernetes.io/component: web
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels: *labels
  template:
    metadata:
      labels: *labels
    spec:
      securityContext:
        fsGroup: 1000
      volumes:
        - name: volume
          persistentVolumeClaim:
            claimName: volume
        - name: media
          persistentVolumeClaim:
            claimName: nfs-media
        - name: cache
          emptyDir: {}
        - name: tmp
          emptyDir: {}
      containers:
        - name: n8n
          image: docker.n8n.io/n8nio/n8n:latest@sha256:4da14e676858f0e7eb0fc08e49ca8902447987d00a52343917153464289400c1
          resources:
            requests:
              memory: 100M
            limits:
              memory: 4G
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
            capabilities:
              drop: [ALL]
          volumeMounts:
            - name: volume
              mountPath: /home/node/.n8n
            - name: cache
              mountPath: /home/node/.cache
            - name: tmp
              mountPath: /tmp
            - name: media
              mountPath: /media
          env:
            - name: TZ
              value: America/Denver
            - name: N8N_EDITOR_BASE_URL
              value: https://n8n.beaver-cloud.xyz
            - name: WEBHOOK_URL
              value: https://n8n.beaver-cloud.xyz
          ports:
            - name: http
              containerPort: 5678

---
apiVersion: v1
kind: Service
metadata:
  name: web-service
spec:
  selector:
    app.kubernetes.io/component: web
  ports:
    - name: http
      port: 80
      targetPort: http

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gatus-config
  labels:
    gatus.io/enabled: 'true'
data:
  n8n.yml: |
    endpoints:
      - name: n8n
        url: http://n8n-web-service.ai
        conditions:
          - '[STATUS] == 200'

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  annotations:
    cert-manager.io/cluster-issuer: cloudflare-issuer
spec:
  ingressClassName: internal
  tls:
    - hosts: [&host n8n.beaver-cloud.xyz]
      secretName: *host
  rules:
    - host: *host
      http:
        paths:
          - pathType: Prefix
            path: '/'
            backend:
              service:
                name: web-service
                port:
                  name: http
