---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deployment
  annotations:
    reloader.stakater.com/auto: 'true'
  labels: &labels
    app.kubernetes.io/component: web
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels: *labels
  template:
    metadata:
      labels: *labels
    spec:
      securityContext:
        fsGroup: 1000
      volumes:
        - name: volume
          persistentVolumeClaim:
            claimName: volume
        - name: media
          persistentVolumeClaim:
            claimName: nfs-media
      initContainers:
        - name: migrate
          image: &image ghcr.io/kevindurb/analyzarr:sha-bd954cc
          command: [bunx, prisma, migrate, deploy]
          env:
            - name: DATABASE_URL
              value: file:/config/database.db
          volumeMounts:
            - name: volume
              mountPath: /config
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
      containers:
        - name: analyzarr
          image: *image
          resources:
            requests:
              memory: 100M
            limits:
              memory: 1G
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
            capabilities:
              drop: [ALL]
          volumeMounts:
            - name: volume
              mountPath: /config
            - name: media
              mountPath: /media
          env:
            - name: TZ
              value: America/Denver
            - name: DATABASE_URL
              value: file:/config/database.db
            - name: SOURCE_PATH
              value: /media/Downloads
            - name: LIBRARY_MOVIES_PATH
              value: /media/Movies
            - name: LIBRARY_TV_SHOWS_PATH
              value: /media/TV Shows
            - name: APP_SECRET
              valueFrom:
                secretKeyRef:
                  name: analyzarr-secret
                  key: APP_SECRET
            - name: TMDB_API_KEY
              valueFrom:
                secretKeyRef:
                  name: analyzarr-secret
                  key: TMDB_API_KEY
          ports:
            - name: http
              containerPort: 3000

---
apiVersion: k8s.bitwarden.com/v1
kind: BitwardenSecret
metadata:
  name: secret
  annotations:
    argocd.argoproj.io/sync-options: Replace=true
spec:
  organizationId: 575f69b2-49f4-456d-bd6f-b14101103188
  secretName: analyzarr-secret
  map:
    - secretKeyName: TMDB_API_KEY
      bwSecretId: 4005f4ef-2db2-405c-9263-b36b0103494c
    - secretKeyName: APP_SECRET
      bwSecretId: 38200fc9-7d47-4c24-85f8-b36b01036b6e
  authToken:
    secretName: bw-auth-token
    secretKey: token

---
apiVersion: v1
kind: Service
metadata:
  name: web-service
spec:
  selector:
    app.kubernetes.io/component: web
  ports:
    - name: http
      port: 80
      targetPort: http

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  annotations:
    cert-manager.io/cluster-issuer: cloudflare-issuer
spec:
  ingressClassName: internal
  tls:
    - hosts: [&host analyzarr.beaver-cloud.xyz]
      secretName: *host
  rules:
    - host: *host
      http:
        paths:
          - pathType: Prefix
            path: '/'
            backend:
              service:
                name: web-service
                port:
                  name: http

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gatus-config
  labels:
    gatus.io/enabled: 'true'
data:
  analyzarr.yml: |
    endpoints:
      - name: analyzarr
        url: http://analyzarr-web-service.media
        conditions:
          - '[STATUS] == 200'
