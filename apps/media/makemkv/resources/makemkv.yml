---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment
  labels: &labels
    app.kubernetes.io/component: web
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels: *labels
  template:
    metadata:
      labels: *labels
    spec:
      securityContext:
        fsGroup: 1000
      nodeSelector:
        kubernetes.io/hostname: kube-big-01
      containers:
        - image: jlesage/makemkv:v25.08.1
          name: makemkv
          env:
            - name: USER_ID
              value: "0"
            - name: GROUP_ID
              value: "0"
            - name: TZ
              value: America/Denver
            - name: DARK_MODE
              value: "1"
            - name: AUTO_DISC_RIPPER
              value: "1"
            - name: AUTO_DISC_RIPPER_EJECT
              value: "1"
            - name: AUTO_DISC_RIPPER_PARALLEL_RIP
              value: "1"
          securityContext:
            privileged: true
          ports:
            - name: http
              containerPort: 5800
          volumeMounts:
            - name: media
              mountPath: /output
              subPath: Downloads
            - name: sg0
              mountPath: /dev/sg0
            - name: sg1
              mountPath: /dev/sg1
            - name: sr0
              mountPath: /dev/sr0
            - name: hooks
              mountPath: /config/hooks
              readOnly: true
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: media-pvc
        - name: sg0
          hostPath:
            path: /dev/sg0
        - name: sg1
          hostPath:
            path: /dev/sg1
        - name: sr0
          hostPath:
            path: /dev/sr0
        - name: hooks
          configMap:
            name: hooks

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hooks
data:
  disk_rip_started.sh: |
    #! /bin/sh
    DRV_ID="$1"
    DISC_LABEL="$2"
    OUTPUT_DIR="$3"

    curl -d "The automatic disc ripper started ripping disc '$DISC_LABEL' (drive $DRV_ID) to '$OUTPUT_DIR'." http://ntfy-web-service.monitoring

  disk_rip_terminated.sh: |
    #! /bin/sh
    DRV_ID="$1"
    DISC_LABEL="$2"
    OUTPUT_DIR="$3"
    STATUS="$4"

    case "$STATUS" in
        0)
            curl -d "The automatic disc ripper successfully ripped disc '$DISC_LABEL' (drive $DRV_ID)." http://ntfy-web-service.monitoring
            ;;
        *)
            curl -d "The automatic disc ripper failed to rip disc '$DISC_LABEL' (drive $DRV_ID)." http://ntfy-web-service.monitoring
            ;;
    esac

---
apiVersion: v1
kind: Service
metadata:
  name: web-service
spec:
  selector:
    app.kubernetes.io/component: web
  ports:
    - name: http
      port: 80
      targetPort: http

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-pvc
spec:
  accessModes: [ReadWriteMany]
  volumeName: media-nfs-pv
  storageClassName: ""
  resources:
    requests:
      storage: 12Ti

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: media-nfs-pv
spec:
  capacity:
    storage: 12Ti
  accessModes:
    - ReadWriteMany
  nfs:
    server: 192.168.50.43
    path: /
  mountOptions: [nfsvers=4.2]

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gatus-config
  labels:
    gatus.io/enabled: "true"
data:
  makemkv.yml: |
    endpoints:
      - name: makemkv
        url: http://makemkv-web-service.media
        conditions:
          - '[STATUS] == 200'
