---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deployment
  annotations:
    reloader.stakater.com/auto: "true"
  labels: &labels
    app.kubernetes.io/component: web
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels: *labels
  template:
    metadata:
      labels: *labels
    spec:
      securityContext:
        fsGroup: 1000
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: media-pvc
        - name: tmp
          emptyDir: {}
        - name: home
          emptyDir: {}
      containers:
        - name: vlc
          image: docker.io/kasmweb/vlc:1.17.0
          resources:
            requests:
              memory: 100M
            limits:
              memory: 1G
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
            capabilities:
              drop: [ALL]
          volumeMounts:
            - name: media
              mountPath: /media
            - name: tmp
              mountPath: /tmp
            - name: home
              mountPath: /home/kasm-user
          env:
            - name: TZ
              value: America/Denver
          ports:
            - name: http
              containerPort: 6901

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: media-nfs-pv
spec:
  capacity:
    storage: 12Ti
  accessModes:
    - ReadWriteMany
  nfs:
    server: 192.168.50.43
    path: /
  mountOptions: [nfsvers=4.2]

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-pvc
spec:
  accessModes: [ReadWriteMany]
  volumeName: media-nfs-pv
  storageClassName: ""
  resources:
    requests:
      storage: 12Ti

---
apiVersion: v1
kind: Service
metadata:
  name: web-service
spec:
  selector:
    app.kubernetes.io/component: web
  ports:
    - name: http
      port: 80
      targetPort: http

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tailscale-ingress
spec:
  ingressClassName: tailscale
  tls: [{ hosts: [vlc] }]
  defaultBackend:
    service:
      name: web-service
      port:
        name: http

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gatus-config
  labels:
    gatus.io/enabled: "true"
data:
  vlc.yml: |
    endpoints:
      - name: vlc
        url: http://vlc-web-service.media
        conditions:
          - '[STATUS] == 200'
