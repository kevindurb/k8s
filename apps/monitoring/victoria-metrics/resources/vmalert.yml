---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vmalert
  namespace: monitoring
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vmalert-config
  namespace: monitoring
data:
  alerts.yml: |
    groups:
    - name: node.rules
      rules:
      - alert: NodeDown
        expr: up{job="kubernetes-nodes"} == 0
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Node {{ $labels.instance }} is down"
          description: "Node {{ $labels.instance }} has been down for more than 5 minutes."
          
      - alert: NodeHighCPUUsage
        expr: 100 - (avg by (instance) (rate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage on {{ $labels.instance }}"
          description: "CPU usage is above 80% for more than 5 minutes."
          
      - alert: NodeHighMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage on {{ $labels.instance }}"
          description: "Memory usage is above 80% for more than 5 minutes."
          
      - alert: NodeHighDiskUsage
        expr: (1 - (node_filesystem_avail_bytes{fstype!="tmpfs"} / node_filesystem_size_bytes{fstype!="tmpfs"})) * 100 > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High disk usage on {{ $labels.instance }}"
          description: "Disk usage is above 80% for more than 5 minutes."
          
    - name: kubernetes.rules
      rules:
      - alert: KubePodCrashLooping
        expr: rate(kube_pod_container_status_restarts_total[15m]) > 0
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Pod {{ $labels.namespace }}/{{ $labels.pod }} is crash looping"
          description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} has been restarting frequently."
          
      - alert: KubePodNotReady
        expr: kube_pod_status_ready{condition="false"} == 1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Pod {{ $labels.namespace }}/{{ $labels.pod }} is not ready"
          description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} has been in not ready state for more than 5 minutes."
          
      - alert: KubeDeploymentReplicasMismatch
        expr: kube_deployment_spec_replicas != kube_deployment_status_available_replicas
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Deployment {{ $labels.namespace }}/{{ $labels.deployment }} has mismatched replicas"
          description: "Deployment {{ $labels.namespace }}/{{ $labels.deployment }} has {{ $value }} available replicas but {{ $labels.spec_replicas }} desired."
          
    - name: victoriametrics.rules
      rules:
      - alert: VictoriaMetricsDown
        expr: up{job="victoria-metrics"} == 0
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "VictoriaMetrics is down"
          description: "VictoriaMetrics has been down for more than 5 minutes."
          
      - alert: VMAgentDown
        expr: up{job="vmagent"} == 0
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "VMAgent is down"
          description: "VMAgent has been down for more than 5 minutes."
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vmalert
  namespace: monitoring
  labels:
    app: vmalert
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vmalert
  template:
    metadata:
      labels:
        app: vmalert
    spec:
      serviceAccountName: vmalert
      securityContext:
        fsGroup: 1000
      containers:
      - name: vmalert
        image: victoriametrics/vmalert:v1.97.1
        args:
        - --rule=/etc/vmalert/alerts.yml
        - --datasource.url=http://victoria-metrics-service:8428
        - --notifier.url=http://alertmanager:9093
        - --httpListenAddr=:8880
        - --loggerLevel=INFO
        - --evaluationInterval=30s
        ports:
        - containerPort: 8880
          name: http
        livenessProbe:
          httpGet:
            path: /health
            port: 8880
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8880
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: 32Mi
            cpu: 50m
          limits:
            memory: 128Mi
            cpu: 200m
        volumeMounts:
        - name: config
          mountPath: /etc/vmalert
        - name: tmp
          mountPath: /tmp
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
      volumes:
      - name: config
        configMap:
          name: vmalert-config
      - name: tmp
        emptyDir: {}