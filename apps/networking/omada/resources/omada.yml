---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deployment
  annotations:
    reloader.stakater.com/auto: 'true'
  labels: &labels
    app.kubernetes.io/component: web
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels: *labels
  template:
    metadata:
      labels: *labels
    spec:
      securityContext:
        fsGroup: 1000
      volumes:
        - name: volume
          persistentVolumeClaim:
            claimName: volume
      containers:
        - name: omada
          image: mbentley/omada-controller:beta-5.14.30.7@sha256:1ef5fa0a27fefa44a3a991553dc930a376f039a4c13c0fd5b60b0b14f241fe3b
          resources:
            requests:
              memory: 100M
            limits:
              memory: 4G
          # securityContext:
          #   privileged: false
          #   allowPrivilegeEscalation: false
          #   runAsNonRoot: true
          #   runAsUser: 1000
          #   runAsGroup: 1000
          #   readOnlyRootFilesystem: true
          #   capabilities:
          #     drop: [ALL]
          volumeMounts:
            - name: volume
              subPath: data
              mountPath: /opt/tplink/EAPController/data
            - name: volume
              subPath: logs
              mountPath: /opt/tplink/EAPController/logs
          env:
            - name: TZ
              value: America/Denver
            - name: PUID
              value: '508'
            - name: PGID
              value: '508'
            - name: MANAGE_HTTP_PORT
              value: '8088'
            - name: MANAGE_HTTPS_PORT
              value: '8043'
            - name: PORTAL_HTTP_PORT
              value: '8888'
            - name: PORTAL_HTTPS_PORT
              value: '8843'
            - name: PORT_APP_DISCOVERY
              value: '27001'
            - name: PORT_ADOPT_V1
              value: '29812'
            - name: PORT_UPGRADE_V1
              value: '29813'
            - name: PORT_MANAGER_V1
              value: '29811'
            - name: PORT_MANAGER_V2
              value: '29814'
            - name: PORT_DISCOVERY
              value: '29810'
            - name: SHOW_SERVER_LOGS
              value: 'true'
            - name: SHOW_MONGODB_LOGS
              value: 'false'
            - name: SSL_CERT_NAME
              value: tls.crt
            - name: SSL_KEY_NAME
              value: tls.key
          ports:
            - name: https
              containerPort: 443

---
apiVersion: v1
kind: Service
metadata:
  name: web-service
spec:
  selector:
    app.kubernetes.io/component: web
  ports:
    - name: https
      port: 443
      targetPort: https

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  annotations:
    cert-manager.io/cluster-issuer: cloudflare-issuer
    nginx.ingress.kubernetes.io/backend-protocol: 'HTTPS'
    nginx.ingress.kubernetes.io/proxy-ssl-verify: 'off'
    nginx.ingress.kubernetes.io/use-regex: 'true'
    nginx.ingress.kubernetes.io/upstream-vhost: 'omada.durbin.casa:8043'
    nginx.ingress.kubernetes.io/proxy-redirect-from: '~https://(.+):8043/(.+)/login$'
    nginx.ingress.kubernetes.io/proxy-redirect-to: 'https://$1/$2/login'
spec:
  ingressClassName: internal
  rules:
    - host: &host omada.beaver-cloud.xyz
      http:
        paths:
          - pathType: Prefix
            path: '/'
            backend:
              service:
                name: web-service
                port:
                  name: https
  tls:
    - hosts: [*host]
      secretName: *host

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gatus-config
  labels:
    gatus.io/enabled: 'true'
data:
  omada.yml: |
    endpoints:
      - name: omada
        url: http://omada-web-service.networking
        conditions:
          - '[STATUS] == 200'
