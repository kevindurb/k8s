# yaml-language-server: $schema=https://taskfile.dev/schema.json
---
version: '3'

vars:
  ingressIp: 192.168.42.10
  apps:
    sh: ls ./apps

tasks:
  force-update-external-secret:
    cmd: 'kubectl annotate externalsecret {{ .name }} force-sync=$(date +%s) --overwrite'
    requires:
      vars: [name]

  build-all:
    cmds:
      - rm -rf ./dist
      - mkdir ./dist
      - for:
          var: apps
        cmd: kustomize build {{ joinPath "./apps" .ITEM }} > ./dist/{{ .ITEM }}.yml
    sources:
      - apps/**/*.{yml,yaml}
    generates:
      - dist/*.yml

  validate:
    vars:
      kubeconformArgs: >-
        -summary
        -output pretty
        -ignore-missing-schemas
        -skip CustomResourceDefinition,Cluster,Password
        -schema-location default
        -schema-location 'https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{`{{ .NormalizedKubernetesVersion }}`}}/{{`{{ .ResourceKind }}`}}{{`{{ .KindSuffix }}`}}.json'
        -schema-location 'https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{`{{.Group}}`}}/{{`{{.ResourceKind}}`}}_{{`{{.ResourceAPIVersion}}`}}.json'
    cmds:
      - task: build-all
      - kubeconform {{ .kubeconformArgs }} ./dist

  get-dashboard-token:
    cmd: kubectl get secret dashboard-admin-user -n kubernetes-dashboard -o jsonpath={".data.token"} | base64 -d

  update-hosts:
    desc: Add all ingress hosts to /etc/hosts pointing to {{ .ingressIp }}
    cmd: |
      # Create backup of current hosts file
      sudo cp /etc/hosts /etc/hosts.backup.$(date +%Y%m%d_%H%M%S)

      # Remove existing k8s ingress entries
      sudo sed -i '' '/# k8s-ingress-start/,/# k8s-ingress-end/d' /etc/hosts

      # Get all unique hostnames from ingress resources
      HOSTS=$(kubectl get ingress -A -o jsonpath='{range .items[*]}{range .spec.rules[*]}{.host}{"\n"}{end}{end}' | sort -u | grep -v '^$')

      # Add k8s ingress section to hosts file
      echo "" | sudo tee -a /etc/hosts
      echo "# k8s-ingress-start" | sudo tee -a /etc/hosts
      echo "$HOSTS" | while read -r host; do
        if [ -n "$host" ]; then
          echo "{{ .ingressIp }} $host" | sudo tee -a /etc/hosts
        fi
      done
      echo "# k8s-ingress-end" | sudo tee -a /etc/hosts

      echo "Updated /etc/hosts with ingress hosts pointing to {{ .ingressIp }}"

  create-bw-auth-token:
    desc: create a bw auth token in a namespace
    requires:
      vars: [NS, token]
    cmd: kubectl create secret generic bw-auth-token -n {{ .NS }} --from-literal=token="{{ .token }}"

  copy-bw-auth-token:
    desc: copy bw auth token from default namespace
    vars:
      token:
        sh: kubectl get secret bw-auth-token -o json | jq -r .data.token | base64 --decode
    requires:
      vars: [NS]
    cmd: kubectl create secret generic bw-auth-token -n {{ .NS }} --from-literal=token="{{ .token }}"
