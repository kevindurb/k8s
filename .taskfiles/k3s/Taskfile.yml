# yaml-language-server: $schema=https://taskfile.dev/schema.json
---
version: '3'

vars:
  KUBE_VIP: 192.168.42.1
  K3S_TOKEN_PATH: /var/lib/rancher/k3s/server/node-token
  K3S_CONFIG_DIR: /etc/rancher/k3s
  K3S_CONFIG_PATH: '{{.K3S_CONFIG_DIR}}/config.yaml'

tasks:
  cluster-init:
    requires:
      vars: [HOST]
    cmds:
      - |
        minijinja-cli \
          --define hostname={{.HOST}} \
          .taskfiles/k3s/templates/cluster-init.yaml.j2 | \
        ssh core@{{.HOST}} 'sudo mkdir -p {{.K3S_CONFIG_DIR}} && sudo tee {{.K3S_CONFIG_PATH}}'
      - ssh core@{{.HOST}} 'sudo systemctl enable --now k3s.service'

  join-server:
    requires:
      vars: [HOST, SERVER]
    vars:
      K3S_TOKEN:
        sh: ssh core@{{.SERVER}} 'sudo cat {{.K3S_TOKEN_PATH}}'
    cmds:
      - |
        minijinja-cli \
          --define hostname={{.HOST}} \
          --define server={{.SERVER}} \
          .taskfiles/k3s/templates/server.yaml.j2 | \
        ssh core@{{.HOST}} 'sudo mkdir -p {{.K3S_CONFIG_DIR}} && sudo tee {{.K3S_CONFIG_PATH}}'
      - ssh core@{{.HOST}} 'sudo systemctl enable --now k3s.service'

  join-agent:
    requires:
      vars: [HOST, SERVER]
    vars:
      K3S_TOKEN:
        sh: ssh core@{{.SERVER}} 'sudo cat {{.K3S_TOKEN_PATH}}'
    cmds:
      - |
        minijinja-cli \
          --define hostname={{.HOST}} \
          --define server={{.SERVER}} \
          .taskfiles/k3s/templates/agent.yaml.j2 | \
        ssh core@{{.HOST}} 'sudo mkdir -p {{.K3S_CONFIG_DIR}} && sudo tee {{.K3S_CONFIG_PATH}}'
      - ssh core@{{.HOST}} 'sudo systemctl enable --now k3s-agent.service'

  bootstrap:
    cmds:
      - task: cluster-init
        vars:
          HOST: unimatrix01
      - for: [unimatrix02, unimatrix03]
        task: join-server
        vars:
          SERVER: 192.168.42.11
          HOST: '{{.ITEM}}'
      - for: { var: hosts.agents }
        task: join-agent
        vars:
          SERVER: 192.168.42.11
          HOST: '{{.ITEM.hostname}}'

  update-config:
    cmds:
      - for: { var: servers }
        task: join-server
        vars:
          SERVER: '{{.KUBE_VIP}}'
          HOST: '{{.ITEM}}'
      - for: { var: agents }
        task: join-agent
        vars:
          SERVER: '{{.KUBE_VIP}}'
          HOST: '{{.ITEM.hostname}}'

  get-kubeconfig:
    desc: Pull the kubeconfig from kube-master-01
    cmd: ssh core@unimatrix01 'sudo cat /etc/rancher/k3s/k3s.yaml' > kubeconfig
