# yaml-language-server: $schema=https://taskfile.dev/schema.json
---
version: '3'

vars:
  DIST: ./dist

tasks:
  gen-ignition:
    requires:
      vars: [hostname, interface, ip]
    cmd: |
      minijinja-cli \
        -D hostnanme={{.hostname}} \
        -D interface={{.interface}} \
        -D ip={{.ip}} \
        ./node.bu.j2 | \
      butane \
        --strict \
        --pretty \
        -o {{.DIST}}/{{.hostname}}.ign \
        --

  gen-all-ignition-files:
    deps:
      - for: { var: servers }
        task: gen-ignition
        vars:
          hostname: '{{.ITEM.hostname}}'
          interface: '{{.ITEM.interface}}'
          ip: '{{.ITEM.ip}}'
      - for: { var: agents }
        task: gen-ignition
        vars:
          hostname: '{{.ITEM.hostname}}'
          interface: '{{.ITEM.interface}}'
          ip: '{{.ITEM.ip}}'

  download-iso:
    generates:
      - '{{.DIST}}/fedora-coreos-*.iso'
    cmd: >
      podman run --rm -v {{.DIST}}:/data
      quay.io/coreos/coreos-installer:release
      download -s stable -p metal -f iso -a x86_64 -C /data

  build-iso:
    deps: [download-iso]
    vars:
      ISO_FILENAME:
        sh: ls {{.DIST}}/fedora-coreos-*.iso | tail -1 | xargs basename
    requires:
      vars: [hostname]
    cmds:
      - cmd: rm -f {{.DIST}}/{{.hostname}}.iso
      - cmd: >
          podman run --rm -it --privileged
          -v {{.DIST}}:/data
          quay.io/coreos/coreos-installer:release
          iso customize
          --dest-device /dev/sda
          --dest-ignition /data/{{.hostname}}.ign
          --output /data/{{.hostname}}.iso
          /data/{{.ISO_FILENAME}}

  build-all-isos:
    deps:
      - for: { var: servers }
        task: build-iso
        vars:
          hostname: '{{.ITEM.hostname}}'
      - for: { var: agents }
        task: build-iso
        vars:
          hostname: '{{.ITEM.hostname}}'

  upgrade-host:
    requires:
      vars: [hostname]
    cmd: |
      echo "Upgrading {{.hostname}}..."
      ssh core@{{.hostname}} 'sudo bootc upgrade && sudo systemctl reboot' || true

  upgrade-all-hosts:
    deps:
      - for: { var: servers }
        task: upgrade-host
        vars:
          hostname: '{{.ITEM.hostname}}'
      - for: { var: agents }
        task: upgrade-host
        vars:
          hostname: '{{.ITEM.hostname}}'

  shutdown:
    desc: Shutdown all bootc hosts
    cmds:
      - for: { var: HOSTS }
        cmd: |
          echo "Shutting down {{.ITEM}}..."
          ssh core@{{.ITEM}} 'sudo systemctl poweroff' || true

  reboot:
    desc: Reboot all bootc hosts
    cmds:
      - for: { var: HOSTS }
        cmd: |
          echo "Rebooting {{.ITEM}}..."
          ssh core@{{.ITEM}} 'sudo systemctl reboot' || true
